# POSTGRES_DB: baseweb_dms config database name if in local
SERVICE_HOST: localhost
SERVICE_PORT: 8080
SQL_DB_HOST: ${POSTGRES_HOST} #localhost #config db host to localhost if in local
SQL_DB_PORT: ${POSTGRES_PORT} #5432
SQL_DB_USER: ${POSTGRES_USER} #postgres
SQL_DB_PASS: ${POSTGRES_PASSWORD} #baseweb@123
server:
  servlet:
    context-path: '/api'
  compression:
    enabled: true
google:
  api_key: ${GOOGLE_MAP_API_KEY} #push google map api key here
upload:
  rootPath: path/to/baseweb/
  backlogDataPath: src/main/java/com/hust/baseweb/applications/backlog/data/
spring:
  redis:
    host : ${REDIS_HOST} #localhost
    port : ${REDIS_PORT} #6379
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS : false
  servlet:
    multipart:

     max-file-size: 100MB
     max-request-size: 100MB

  data:
    rest:
      #base-path: /rest
      detection-strategy:  ANNOTATED

    mongodb:
      uri: mongodb://${MONGO_URI}
      #host: ${MONGO_HOST} #localhost 
      #port: ${MONGO_PORT} #27017
      database: ${MONGO_DB_NAME} #baseweb

  datasource:
    driver-class-name: org.postgresql.Driver
    hikari:
      maxLifetime: 300000
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 120000
      connectionTimeout: 300000
      leakDetectionThreshold: 300000
    url: jdbc:postgresql://${SQL_DB_HOST}:${SQL_DB_PORT}/${POSTGRES_DB}

    username: ${SQL_DB_USER}
    password: ${SQL_DB_PASS}

  mail:
      host: smtp.gmail.com
      port: 587
      properties:
        mail:
          smtp:
            auth: true
            connectiontimeout: 5000
            starttls:
              enable: true
            timeout: 5000
            writetimeout: 5000
      username: // email
      password: // email password

logging:
  file:
    path: logs
    name: base.log
  level:
    root: INFO
    com:
      hust :
        baseweb : DEBUG
    org:
      springframework: INFO
  config: classpath:logback-dev.xml
content-repo:
  url : http://${CONTENT_SERVICE_HOST}:${CONTENT_SERVICE_PORT}/ #'http://localhost:8081/'

